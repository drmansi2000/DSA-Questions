/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root == null) return new ArrayList<>();
         List<List<Integer>> ans = new ArrayList<>();
       
        
         Queue<TreeNode> q = new LinkedList<TreeNode>();
         q.add(root);
    
                while( !q.isEmpty() )
                {
                    List<Integer> level = new ArrayList<>();
                    int qsize = q.size();
                    while( qsize > 0 )
                    {
                        TreeNode a = q.poll();
                    
                         level.add(a.val);
                    
                        if( a.left!=null )
                             q.add(a.left);
                        if( a.right!=null )
                             q.add(a.right);
                        
                        qsize--;
                    }
                    ans.add(level);
                }
              
        return ans;
             
    }
}
