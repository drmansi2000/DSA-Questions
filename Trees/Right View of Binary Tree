/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView( TreeNode root ) {
        
         List< Integer > arr = new ArrayList<>();
         TreeNode node = null; 
         Queue<TreeNode> q = new LinkedList<>();
        
         if(root == null) 
             return new ArrayList<>();
        
        q. add( root );
        
        while(!q.isEmpty())
          {
            int temp = q.size();
            while( temp > 0 )
                {      
                    if(temp == 1)
                        {
                            arr.add(q.peek().val);
                        }

                        node = q.poll();

                        if(node.left!=null) q.add(node.left);
                        if(node.right!=null) q.add(node.right);

                        temp--;
                 }     
         }
        
        return arr;
           
    }
}
